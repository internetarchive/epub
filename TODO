Mini to do:


Art of Caricaturing - needs cover?

- check on get rid of
try:
    from lxml import etree
except ImportError:
    sys.path.append('/petabox/sw/lib/lxml/lib/python2.5/site-packages') 
    from lxml import etree
from lxml import objectify


birdbook - problem with visualize


To do:
general:
- handle books with disjoint/repeating page number ranges, 
  e.g. libraries of the future, missing page 1 in romance.

- move all abbyy parsing into iabook; make json interface to same. (see booki)
- make condense, visualize be output opts


epub:
- switch to incremental content generation
- Better chapter structure
- link to streaming / details page / etc.
- 'width', 'height' tags for images.  (pamfile + tee? temp files?)


daisy:
- extract proper metadata (or pass it elseways)
- Copyright, legalese - add!


Maybe someday:
- Small-caps font emulation
- Auto portrait/landscape scaling/rotation of images
- Add code to iarchive.py to make sense of page numbers, e.g. unnumbered start pages, pages that start at '2', etc.  Romance is an initial example.  Also pageNumBox

- make sure required epub, daisy metadata is actually present

- get rid of common.py?
Skip line if too many chars are suspicious?




--daisy (opts - mogrify)
--epub (default) (opts -> -d)
--condense
--visualize



do we have a test/real eventual "/nls" (only) book/item now/yet?  i could dark the non-xml files (item mgr) and i could setup some sudoer rules for mike's script to be able to "sudo up" from "www-data" to root to access the files.  (or we could delay that for later?)
[10/13/09 5:21:04 PM] Tracey Jaquith: mike -- for books like that, a few simple lines in the script like this should get you close to the privs thing:
[10/13/09 5:21:10 PM] Tracey Jaquith: require_once '/petabox/setup.inc';
[10/13/09 5:21:17 PM] Tracey Jaquith: Auth::must_be_logged_in();
[10/13/09 5:21:28 PM] Tracey Jaquith: if (Auth::hasPriv("/nls"))  ...



get that to you in a sec...
[10/13/09 8:39:35 PM] Hank Bromley: $_COOKIE['logged-in-user']

will be the user id (email address)

Auth::status() returns the current user's priv list (as an array), in a form suitable for being passed to the Auth::hasPriv() function tracey mentioned earlier. (you provide it no args; it looks up the current user via $_COOKIE['logged-in-user'])
[10/13/09 8:40:33 PM] Hank Bromley: you can see how all this is defined, if you're interested, in petabox/www/common/Auth.inc
